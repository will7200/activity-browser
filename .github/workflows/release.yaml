name: stable release
on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - name: Build changelog from PRs with labels
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create github release
        uses: ncipollo/release-action@v1
        with:
          body: ${{steps.build_changelog.outputs.changelog}}
          commit: main
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up conda-build environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.11
          activate-environment: build
          environment-file: .github/conda-envs/build.yml
      - name: Build activity-browser stable
        run: |
          conda build recipe/
      - name: Upload to anaconda.org
        run: |
          anaconda -t ${{ secrets.CONDA_UPLOAD_TOKEN }} upload \
          /usr/share/miniconda/envs/build/conda-bld/noarch/*.tar.bz2


  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-13 ]
        python-version: [ '3.10' ]
    defaults:
      run:
        shell: bash -e {0}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # install
      - name: Install package
        run: |
          export GIT_DESCRIBE_TAG=`git describe --tags`
          pip install .
      - name: Install Build Dependencies
        run: |
          python -m pip install pyinstaller --user
      - name: Build
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            python scripts/createmsi.py
            echo "##[set-output name=build;]$(ls *.msi)"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            python scripts/create_macos_package.py
            echo "##[set-output name=build;]$(ls *.pkg)"
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
        shell: bash
      - name: Upload
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.windows_build.outputs.build }}
          
          
